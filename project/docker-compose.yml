version: '3.7'
services:
  backend:
    image: django
    container_name: backend
    networks:
      - exam
    ports:
      - 8000:8000
    depends_on:
      gutendex:
        condition: service_healthy
    environment:
      SECRET_KEY: pass
      DATABASE_NAME: gutendex
      DATABASE_USER: gutendex
      DATABASE_PASSWORD: pass
      DATABASE_HOST: gutendex
      DATABASE_PORT: 5432
      ADMIN_EMAILS: bekasmaciej@gmail.com
      ADMIN_NAMES: Maciej
      ALLOWED_HOSTS: 127.0.0.1,gutendex,localhost
      DEBUG: "false"
      EMAIL_HOST: your.smtp.host.here
      EMAIL_HOST_ADDRESS: gutendex@your.domain.here
      EMAIL_HOST_PASSWORD: your-smtp-host-password
      EMAIL_HOST_USER: your-smtp-host-user-name
      MANAGER_EMAILS: someone@their.domain.here
      MANAGER_NAMES: Someone
      MEDIA_ROOT: /var/www/gutendex/media/
      STATIC_ROOT: /var/www/gutendex/static-root/
#    stdin_open: true # docker run -i
#    tty: true
    volumes:
      - staticvolume:/app/static/

  gutendex:
    image: postgres:14.5
    container_name: gutendex
    networks:
      - exam
    ports:
      - 5432:5432
    volumes:
#      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - exam:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U gutendex -d gutendex"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: gutendex
      POSTGRES_DB: gutendex


  frontend:
    image: nginx:latest
    container_name: front
    volumes:
     - staticvolume:/usr/share/nginx/html/static
     - ./conf/nginx.conf:/etc/nginx/nginx.conf
     - ./gutendex/templates/home.html:/usr/share/nginx/html/index.html
    ports:
     - 8080:80
    environment:
     - NGINX_PORT=80
    networks:
     - exam
    depends_on:
     - backend

networks:
  exam:
    name: exam

volumes:
  exam:
    name: exam
  staticvolume:
    name: staticvolume
